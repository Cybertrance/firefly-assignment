name: Go Application CI

# Triggers the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Define jobs that will run on a Linux environment
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.1"

      # Step 3: Cache Go modules to speed up subsequent builds
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: go mod download

      # Step 5: Run tests (ensure tests pass before building)
      - name: Run tests
        run: go test ./... -v # Runs all tests in the project

      # Step 6: Build the Go application
      - name: Build application
        run: go build -o build/my-go-app . # Customize the output binary location as needed

      # Step 7: Copy static files (url file)
      - name: Copy static files
        run: cp -R static/* build/static/ # Copy static files to the build directory

      # Step 8: Upload build artifacts
      # Uploads the built binary and static files as artifacts in GitHub Actions
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/
